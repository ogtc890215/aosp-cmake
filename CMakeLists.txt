cmake_minimum_required(VERSION 3.6)
# Debug
set(CMAKE_VERBOSE_MAKEFILE on)
project(aosp)

# environment variables
set(ANDROID_ROOT /Volumes/android)
set(INTERMEDIATES_ROOT ${ANDROID_ROOT}/out/soong/.intermediates)
# build toolchains
set(CMAKE_C_COMPILER ${ANDROID_ROOT}/prebuilts/clang/host/darwin-x86/clang-stable/bin/clang)
set(CMAKE_CXX_COMPILER ${ANDROID_ROOT}/prebuilts/clang/host/darwin-x86/clang-stable/bin/clang++)
set(CMAKE_AR ${ANDROID_ROOT}/prebuilts/gcc/darwin-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin/ar)
set(CMAKE_RANLIB ${ANDROID_ROOT}/prebuilts/gcc/darwin-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin/ranlib)

set(CMAKE_SHARED_LIBRARY_SUFFIX_C .so)
set(CMAKE_SHARED_LIBRARY_SUFFIX_CXX .so)
set(CMAKE_SHARED_LIBRARY_PREFIX_C "")
set(CMAKE_SHARED_LIBRARY_PREFIX_CXX "")
set(CMAKE_STATIC_LIBRARY_PREFIX_C "")
set(CMAKE_STATIC_LIBRARY_PREFIX_CXX "")

set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared")
set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-shared")

# Common Includes
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/arch-arm64/include")
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/include")
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/kernel/uapi")
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/kernel/uapi/asm-arm64")
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/kernel/android/scsi")
include_directories(SYSTEM "${ANDROID_ROOT}/bionic/libc/kernel/android/uapi")

include_directories("${ANDROID_ROOT}/external/libcxx/include")
include_directories("${ANDROID_ROOT}/external/libcxxabi/include")
include_directories("${ANDROID_ROOT}/system/core/include")
include_directories("${ANDROID_ROOT}/libnativehelper/include")
include_directories("${ANDROID_ROOT}/libnativehelper/include_deprecated")

add_definitions(-D_FORTIFY_SOURCE=2)
add_definitions(-DNDEBUG)
add_definitions(-DANDROID)
add_definitions(-D__compiler_offsetof=__builtin_offsetof)
add_definitions(-DANDROID_STRICT)
add_definitions(-D_USING_LIBCXX)
add_definitions(-D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS)

# Common CFlags
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-exceptions")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-multichar")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-strict-aliasing")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fstack-protector-strong")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -ffunction-sections")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fdata-sections")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -funwind-tables")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wa,--noexecstack")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=format-security")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-short-enums")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -no-canonical-prefixes")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=implicit-function-declaration")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wstrict-aliasing=2")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fmessage-length=0")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unused")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Winit-self")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wpointer-arith")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -UDEBUG")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fdebug-prefix-map=/proc/self/cwd=")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=int-conversion")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-reserved-id-macro")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-format-pedantic")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unused-command-line-argument")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fcolor-diagnostics")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-expansion-to-defined")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=return-type")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=non-virtual-dtor")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=address")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=sequence-point")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=date-time")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -nostdlibinc")

#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -msoft-float")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfloat-abi=softfp")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfpu=neon")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mcpu=cortex-a53")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfpu=neon-fp-armv8")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D__ARM_FEATURE_LPAE=1")

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -target")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} aarch64-linux-android")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -B${ANDROID_ROOT}/prebuilts/gcc/darwin-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=pointer-to-int-cast")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=int-to-pointer-cast")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=address-of-temporary")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=return-type")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -MD")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -MF")

# Common CppFlags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-exceptions")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-multichar")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-strict-aliasing")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fstack-protector-strong")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ffunction-sections")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fdata-sections")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -funwind-tables")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wa,--noexecstack")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=format-security")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-short-enums")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -no-canonical-prefixes")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=implicit-function-declaration")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wstrict-aliasing=2")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fmessage-length=0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Winit-self")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wpointer-arith")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -UDEBUG")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fdebug-prefix-map=/proc/self/cwd=")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=int-conversion")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-reserved-id-macro")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-format-pedantic")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-command-line-argument")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fcolor-diagnostics")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-expansion-to-defined")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=return-type")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=non-virtual-dtor")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=address")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=sequence-point")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=date-time")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -nostdlibinc")

#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msoft-float")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfloat-abi=softfp")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfpu=neon")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mcpu=cortex-a53")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfpu=neon-fp-armv8")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D__ARM_FEATURE_LPAE=1")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -target")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} aarch64-linux-android")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -B${ANDROID_ROOT}/prebuilts/gcc/darwin-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wsign-promo")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-inconsistent-missing-override")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-null-dereference")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-thread-safety-negative")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-rtti")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=pointer-to-int-cast")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=int-to-pointer-cast")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=address-of-temporary")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=return-type")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -MD")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -MF")

link_libraries("-nostdlib")
link_libraries("-Wl,--gc-sections")
link_libraries("-target aarch64-linux-android")
link_libraries("-B${ANDROID_ROOT}/prebuilts/gcc/darwin-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin")
link_libraries("-Wl,--no-undefined")
link_libraries("-Wl,-z,noexecstack")
link_libraries("-Wl,-z,relro")
link_libraries("-Wl,-z,now")
link_libraries("-Wl,--build-id=md5")
link_libraries("-Wl,--warn-shared-textrel")
link_libraries("-Wl,--fatal-warnings")
link_libraries("-Wl,-maarch64linux")
link_libraries("-Wl,--hash-style=gnu")
link_libraries("-Wl,--fix-cortex-a53-843419")
link_libraries("-fuse-ld=gold")
link_libraries("-Wl,--icf=safe")
link_libraries("-Wl,--no-undefined-version")

#-fsanitize=integer
#-fsanitize-trap=all
#-ftrap-function=abort

#link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/bionic/libc/crtbegin_so/android_arm64_armv8-a_cortex-a53_core/crtbegin_so.o)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/external/compiler-rt/libcompiler_rt-extras/android_arm64_armv8-a_cortex-a53_static_core/libcompiler_rt-extras.a)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/build/soong/libatomic/android_arm64_armv8-a_cortex-a53_static_core/libatomic.a)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/build/soong/libgcc/android_arm64_armv8-a_cortex-a53_static_core/libgcc.a)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/external/libcxx/libc++/android_arm64_armv8-a_cortex-a53_shared_core/libc++.so)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/bionic/libc/libc/android_arm64_armv8-a_cortex-a53_shared_core/libc.so)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/bionic/libm/libm/android_arm64_armv8-a_cortex-a53_shared_core/libm.so)
link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/bionic/libdl/libdl/android_arm64_armv8-a_cortex-a53_shared_core/libdl.so)
#link_libraries(${ANDROID_ROOT}/out/soong/.intermediates/bionic/libc/crtend_so/android_arm64_armv8-a_cortex-a53_core/obj/bionic/libc/arch-common/bionic/crtend_so.o)


# subproject directories
add_subdirectory(bionic/libc/async_safe)
add_subdirectory(bionic/libc/malloc_debug)
add_subdirectory(bionic/libc/seccomp)

add_subdirectory(external/boringssl)
add_subdirectory(external/dng_sdk)
add_subdirectory(external/expat)
add_subdirectory(external/flac/libFLAC)
add_subdirectory(external/freetype)
add_subdirectory(external/giflib)
add_subdirectory(external/harfbuzz_ng)
add_subdirectory(external/icu/android_utils)
add_subdirectory(external/icu/icu4c/source/common)
add_subdirectory(external/icu/icu4c/source/i18n)
add_subdirectory(external/libcap)
include(external/libjpeg-turbo/libjpeg.cmake)
add_subdirectory(external/libunwind)
include(external/libpng/libpng.cmake)
add_subdirectory(external/libvpx)
add_subdirectory(external/libvpx/libwebm)
add_subdirectory(external/libxml2)
include(external/libyuv/files/libyuv.cmake)
add_subdirectory(external/lzma/C)
add_subdirectory(external/minijail)
add_subdirectory(external/parameter-framework)
add_subdirectory(external/pcre)
add_subdirectory(external/pdfium)
add_subdirectory(external/piex)
add_subdirectory(external/protobuf)
add_subdirectory(external/selinux/libselinux)
add_subdirectory(external/sfntly)
add_subdirectory(external/skia)
add_subdirectory(external/sonic)
add_subdirectory(external/sonivox/arm-wt-22k)
add_subdirectory(external/speex)
add_subdirectory(external/sqlite)
add_subdirectory(external/tinyalsa)
add_subdirectory(external/tinyxml2)
add_subdirectory(external/toybox)
add_subdirectory(external/tremolo)
add_subdirectory(external/vulkan-validation-layers/libs)
add_subdirectory(external/webp/src)
add_subdirectory(external/zlib)

add_subdirectory(frameworks/av/camera)
add_subdirectory(frameworks/av/drm/common)
add_subdirectory(frameworks/av/drm/drmserver)
add_subdirectory(frameworks/av/drm/libdrmframework)
add_subdirectory(frameworks/av/drm/libmediadrm)
add_subdirectory(frameworks/av/media/audioserver)
add_subdirectory(frameworks/av/media/img_utils)
add_subdirectory(frameworks/av/media/libaaudio/src)
add_subdirectory(frameworks/av/media/libaudioclient)
add_subdirectory(frameworks/av/media/libaudiohal)
add_subdirectory(frameworks/av/media/libaudioprocessing)
add_subdirectory(frameworks/av/media/libcpustats)
add_subdirectory(frameworks/av/media/libeffects/config)
add_subdirectory(frameworks/av/media/libheif)
add_subdirectory(frameworks/av/media/libmedia)
add_subdirectory(frameworks/av/media/libmediametrics)
add_subdirectory(frameworks/av/media/libmediaplayerservice)
add_subdirectory(frameworks/av/media/libmediaplayerservice/nuplayer)
add_subdirectory(frameworks/av/media/libnbaio)
add_subdirectory(frameworks/av/media/libstagefright)
add_subdirectory(frameworks/av/media/libstagefright/codecs/aacenc)
add_subdirectory(frameworks/av/media/libstagefright/codecs/common)
add_subdirectory(frameworks/av/media/libstagefright/colorconversion)
add_subdirectory(frameworks/av/media/libstagefright/filters)
add_subdirectory(frameworks/av/media/libstagefright/flac/dec)
add_subdirectory(frameworks/av/media/libstagefright/foundation)
add_subdirectory(frameworks/av/media/libstagefright/http)
add_subdirectory(frameworks/av/media/libstagefright/httplive)
add_subdirectory(frameworks/av/media/libstagefright/id3)
add_subdirectory(frameworks/av/media/libstagefright/matroska)
add_subdirectory(frameworks/av/media/libstagefright/mpeg2ts)
add_subdirectory(frameworks/av/media/libstagefright/omx)
add_subdirectory(frameworks/av/media/libstagefright/rtsp)
add_subdirectory(frameworks/av/media/libstagefright/timedtext)
add_subdirectory(frameworks/av/media/libstagefright/webm)
add_subdirectory(frameworks/av/media/libstagefright/wifi-display)
add_subdirectory(frameworks/av/media/libstagefright/xmlparser)
add_subdirectory(frameworks/av/media/mediaserver)
add_subdirectory(frameworks/av/media/utils)
add_subdirectory(frameworks/av/services/audioflinger)
add_subdirectory(frameworks/av/services/audiopolicy)
add_subdirectory(frameworks/av/services/audiopolicy/common/managerdefinitions)
add_subdirectory(frameworks/av/services/audiopolicy/engineconfigurable)
add_subdirectory(frameworks/av/services/audiopolicy/engineconfigurable/wrapper)
add_subdirectory(frameworks/av/services/mediaanalytics)
add_subdirectory(frameworks/av/services/mediaextractor)
add_subdirectory(frameworks/av/services/medialog)
add_subdirectory(frameworks/av/services/mediaresourcemanager)
add_subdirectory(frameworks/av/services/minijail)
add_subdirectory(frameworks/av/services/oboeservice)
add_subdirectory(frameworks/av/services/soundtrigger)
add_subdirectory(frameworks/av/soundtrigger)
add_subdirectory(frameworks/base/cmds/bootanimation)
add_subdirectory(frameworks/base/core/jni)
add_subdirectory(frameworks/base/libs/androidfw)
add_subdirectory(frameworks/base/libs/hwui)
add_subdirectory(frameworks/hardware/interfaces/displayservice/1.0)
add_subdirectory(frameworks/hardware/interfaces/vr/composer/1.0)
add_subdirectory(frameworks/minikin/libs/minikin)
add_subdirectory(frameworks/native/cmds/servicemanager)
add_subdirectory(frameworks/native/libs/binder)
add_subdirectory(frameworks/native/libs/graphicsenv)
add_subdirectory(frameworks/native/libs/gui)
add_subdirectory(frameworks/native/libs/input)
add_subdirectory(frameworks/native/libs/nativewindow)
add_subdirectory(frameworks/native/libs/sensor)
add_subdirectory(frameworks/native/libs/ui)
add_subdirectory(frameworks/native/libs/vr/libbufferhub)
add_subdirectory(frameworks/native/libs/vr/libbufferhubqueue)
add_subdirectory(frameworks/native/libs/vr/libdisplay)
add_subdirectory(frameworks/native/libs/vr/libpdx)
add_subdirectory(frameworks/native/libs/vr/libpdx_uds)
add_subdirectory(frameworks/native/libs/vr/libperformance)
add_subdirectory(frameworks/native/libs/vr/libvr_manager)
add_subdirectory(frameworks/native/libs/vr/libvrflinger)
add_subdirectory(frameworks/native/libs/vr/libvrsensor)
add_subdirectory(frameworks/native/opengl/libs)
add_subdirectory(frameworks/native/services/audiomanager)
add_subdirectory(frameworks/native/services/displayservice)
add_subdirectory(frameworks/native/services/powermanager)
add_subdirectory(frameworks/native/services/surfaceflinger)
add_subdirectory(frameworks/native/vulkan)
add_subdirectory(frameworks/rs/cpp)
add_subdirectory(frameworks/wilhelm/src)

add_subdirectory(hardware/interfaces/audio/2.0)
add_subdirectory(hardware/interfaces/audio/common/2.0)
add_subdirectory(hardware/interfaces/audio/common/2.0/default)
add_subdirectory(hardware/interfaces/audio/effect/2.0)
add_subdirectory(hardware/interfaces/cas/1.0)
add_subdirectory(hardware/interfaces/cas/native/1.0)
add_subdirectory(hardware/interfaces/configstore/1.0)
add_subdirectory(hardware/interfaces/configstore/utils)
add_subdirectory(hardware/interfaces/drm/1.0)
add_subdirectory(hardware/interfaces/graphics/allocator/2.0)
add_subdirectory(hardware/interfaces/graphics/bufferqueue/1.0)
add_subdirectory(hardware/interfaces/graphics/common/1.0)
add_subdirectory(hardware/interfaces/graphics/composer/2.1)
add_subdirectory(hardware/interfaces/graphics/mapper/2.0)
add_subdirectory(hardware/interfaces/media/1.0)
add_subdirectory(hardware/interfaces/media/omx/1.0)
add_subdirectory(hardware/interfaces/memtrack/1.0)
add_subdirectory(hardware/interfaces/power/1.0)
add_subdirectory(hardware/interfaces/soundtrigger/2.0)
add_subdirectory(hardware/libhardware)
add_subdirectory(hardware/libhardware_legacy)

add_subdirectory(libnativehelper)

add_subdirectory(system/core/base)
add_subdirectory(system/core/debuggerd)
add_subdirectory(system/core/demangle)
add_subdirectory(system/core/libappfuse)
add_subdirectory(system/core/libbacktrace)
add_subdirectory(system/core/libcutils)
add_subdirectory(system/core/libgrallocusage)
add_subdirectory(system/core/liblog)
add_subdirectory(system/core/libmemtrack)
add_subdirectory(system/core/libmemunreachable)
add_subdirectory(system/core/libnativebridge)
add_subdirectory(system/core/libnativeloader)
add_subdirectory(system/core/libpackagelistparser)
add_subdirectory(system/core/libprocessgroup)
add_subdirectory(system/core/libsync)
add_subdirectory(system/core/libusbhost)
add_subdirectory(system/core/libutils)
add_subdirectory(system/core/libvndksupport)
add_subdirectory(system/core/libziparchive)
add_subdirectory(system/libfmq)
add_subdirectory(system/libhidl/base)
add_subdirectory(system/libhidl/libhidlmemory)
add_subdirectory(system/libhidl/transport)
add_subdirectory(system/libhidl/transport/allocator/1.0)
add_subdirectory(system/libhidl/transport/memory/1.0)
add_subdirectory(system/libhidl/transport/token/1.0)
add_subdirectory(system/libhidl/transport/token/1.0/utils)
add_subdirectory(system/libhwbinder)
add_subdirectory(system/libvintf)
add_subdirectory(system/media/audio_utils)
add_subdirectory(system/media/camera)
add_subdirectory(system/netd/client)
