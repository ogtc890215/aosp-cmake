set(LOCAL_PATH ${KERNEL_ROOT}/lib)

set(SOURCE_FILES "")

add_c_source(SOURCE_FILES ${LOCAL_PATH} ctype)
add_c_source(SOURCE_FILES ${LOCAL_PATH} string)
add_c_source(SOURCE_FILES ${LOCAL_PATH} vsprintf)
add_c_source(SOURCE_FILES ${LOCAL_PATH} cmdline)
add_c_source(SOURCE_FILES ${LOCAL_PATH} rbtree)
add_c_source(SOURCE_FILES ${LOCAL_PATH} radix-tree)
add_c_source(SOURCE_FILES ${LOCAL_PATH} dump_stack)
add_c_source(SOURCE_FILES ${LOCAL_PATH} timerqueue)
add_c_source(SOURCE_FILES ${LOCAL_PATH} idr)
add_c_source(SOURCE_FILES ${LOCAL_PATH} int_sqrt)
add_c_source(SOURCE_FILES ${LOCAL_PATH} extable)
add_c_source(SOURCE_FILES ${LOCAL_PATH} sha1)
add_c_source(SOURCE_FILES ${LOCAL_PATH} md5)
add_c_source(SOURCE_FILES ${LOCAL_PATH} irq_regs)
add_c_source(SOURCE_FILES ${LOCAL_PATH} reciprocal_div)
add_c_source(SOURCE_FILES ${LOCAL_PATH} argv_split)
add_c_source(SOURCE_FILES ${LOCAL_PATH} proportions)
add_c_source(SOURCE_FILES ${LOCAL_PATH} flex_proportions)
add_c_source(SOURCE_FILES ${LOCAL_PATH} prio_heap)
add_c_source(SOURCE_FILES ${LOCAL_PATH} ratelimit)
add_c_source(SOURCE_FILES ${LOCAL_PATH} show_mem)
add_c_source(SOURCE_FILES ${LOCAL_PATH} is_single_threaded)
add_c_source(SOURCE_FILES ${LOCAL_PATH} plist)
add_c_source(SOURCE_FILES ${LOCAL_PATH} decompress)
add_c_source(SOURCE_FILES ${LOCAL_PATH} kobject_uevent)
add_c_source(SOURCE_FILES ${LOCAL_PATH} earlycpio)
if (CONFIG_MMU)
    add_c_source(SOURCE_FILES ${LOCAL_PATH} ioremap)
endif ()
if (CONFIG_SMP)
    add_c_source(SOURCE_FILES ${LOCAL_PATH} cpumask)
endif ()
add_c_source(SOURCE_FILES ${LOCAL_PATH} kobject)
add_c_source(SOURCE_FILES ${LOCAL_PATH} klist)

add_library(lib-libs STATIC ${SOURCE_FILES})

set(SOURCE_FILES "")

if (CONFIG_ARCH_HAS_DEBUG_STRICT_USER_COPY_CHECKS)
    add_c_source(SOURCE_FILES ${LOCAL_PATH} usercopy)
endif ()